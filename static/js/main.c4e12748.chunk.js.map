{"version":3,"sources":["components/MainLayout.js","components/screens/PersonalDetails.js","components/screens/PaymentDetails.js","components/screens/SuccessScreen.js","App.js","serviceWorker.js","index.js"],"names":["MainLayout","children","activeStep","Paper","elevation","style","styles","container","stepperContainer","Stepper","Step","StepLabel","Divider","display","minWidth","flexDirection","width","flex","PersonalDetails","nextStep","details","updateDetails","padding","Typography","variant","onSubmit","e","preventDefault","TextField","defaultValue","name","required","label","fullWidth","onChange","target","value","address","Button","type","color","CardInfo","placeholder","cardNo","justifyContent","cardExp","cardCvv","UPIInfo","upiId","PaymentDetails","prevStep","useState","setValue","paymentOptions","FormControl","component","FormLabel","RadioGroup","row","aria-label","event","paymentMethod","FormControlLabel","control","Radio","disabled","onClick","methods","SuccessScreen","App","step","setStep","setDetails","newDetails","tempDetails","Object","keys","forEach","key","screens","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c4e12748.chunk.js","sourcesContent":["import React from 'react'\nimport { Stepper, Step, StepLabel, Paper, Divider } from '@material-ui/core'\n\nexport default function MainLayout({ children, activeStep }) {\n\treturn (\n\t\t<Paper elevation={2} style={styles.container} >\n\t\t\t<div style={styles.stepperContainer} >\n\t\t\t\t<Stepper activeStep={activeStep} >\n\t\t\t\t\t<Step>\n\t\t\t\t\t\t<StepLabel>Personal Details</StepLabel>\n\t\t\t\t\t</Step>\n\t\t\t\t\t<Step>\n\t\t\t\t\t\t<StepLabel>Payment Information</StepLabel>\n\t\t\t\t\t</Step>\n\t\t\t\t</Stepper>\n\t\t\t\t<Divider />\n\t\t\t</div>\n\t\t\t{children}\n\t\t</Paper>\n\t)\n}\n\nconst styles = {\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tminWidth: '30vw',\n\t\tflexDirection: 'column',\n\t\t// border: 'solid black 1px',\n\t},\n\tstepperContainer: {\n\t\twidth: '100%',\n\t\t// border: 'solid black 1px',\n\t\tflex: 1,\n\t},\n}","import React from 'react'\nimport { TextField, Typography, Button } from '@material-ui/core'\n\nexport default function PersonalDetails({ nextStep, details, updateDetails }) {\n\treturn (\n\t\t<div style={{ flex: 1, display: 'flex', flexDirection: 'column', padding: 40, }} >\n\t\t\t<Typography variant='h5' >Personal Details</Typography>\n\t\t\t<br /><br />\n\t\t\t<form onSubmit={(e)=>{e.preventDefault(); nextStep();}} >\n\t\t\t\t<TextField\n\t\t\t\t\tdefaultValue={details.name ? details.name : ''}\n\t\t\t\t\trequired\n\t\t\t\t\tlabel='Full Name'\n\t\t\t\t\tfullWidth\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tonChange={e => { updateDetails({ name: e.target.value }) }}\n\t\t\t\t\t/>\n\t\t\t\t<br /><br />\n\t\t\t\t<TextField\n\t\t\t\t\tdefaultValue={details.address ? details.address : ''}\n\t\t\t\t\trequired\n\t\t\t\t\tlabel='Address'\n\t\t\t\t\tfullWidth\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tonChange={e => { updateDetails({ address: e.target.value }) }}\n\t\t\t\t/>\n\t\t\t\t<br /><br />\n\t\t\t\t<br /><br />\n\t\t\t\t<Button type='submit' variant='contained' color='primary' >Next</Button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n","import React, { useState } from 'react'\nimport { TextField, Typography, Button, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core'\n\nfunction CardInfo({ details, updateDetails }) {\n\treturn (\n\t\t<div>\n\t\t\t<TextField\n\t\t\t\trequired\n\t\t\t\tlabel='Card Number'\n\t\t\t\tfullWidth\n\t\t\t\tvariant='outlined'\n\t\t\t\tplaceholder='XXXX-XXXX-XXXX-XXXX'\n\t\t\t\tdefaultValue={details.cardNo ? details.cardNo : ''}\n\t\t\t\tonChange={e => { updateDetails({ cardNo: e.target.value }) }}\n\t\t\t/>\n\t\t\t<br /><br />\n\t\t\t<div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly' }} >\n\t\t\t\t<TextField\n\t\t\t\t\trequired\n\t\t\t\t\tlabel='EXP'\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tplaceholder='XX/XX'\n\t\t\t\t\tdefaultValue={details.cardExp ? details.cardExp : ''}\n\t\t\t\t\tonChange={e => { updateDetails({ cardExp: e.target.value }) }}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\trequired\n\t\t\t\t\tlabel='CVV'\n\t\t\t\t\ttype='password'\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tplaceholder='XXX'\n\t\t\t\t\tdefaultValue={details.cardCvv ? details.cardCvv : ''}\n\t\t\t\t\tonChange={e => { updateDetails({ cardCvv: e.target.value }) }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nfunction UPIInfo({ details, updateDetails }) {\n\treturn (\n\t\t<TextField\n\t\t\trequired\n\t\t\tlabel='UPI ID'\n\t\t\tvariant='outlined'\n\t\t\tdefaultValue={details.upiId ? details.upiId : ''}\n\t\t\tonChange={e => { updateDetails({ upiId: e.target.value }) }}\n\t\t/>\n\t)\n}\n\nexport default function PaymentDetails({ nextStep, prevStep, details, updateDetails }) {\n\n\tconst [value, setValue] = useState('0');\n\n\tconst handleChange = (event) => {\n\t\tupdateDetails({ paymentMethod: event.target.value })\n\t\tsetValue(event.target.value);\n\t};\n\n\tconst paymentOptions = [\n\t\t<CardInfo details={details} updateDetails={updateDetails} />,\n\t\t<CardInfo details={details} updateDetails={updateDetails} />,\n\t\t<UPIInfo details={details} updateDetails={updateDetails} />,\n\t]\n\n\treturn (\n\t\t<div style={{ flex: 1, display: 'flex', flexDirection: 'column', padding: 40, }} >\n\t\t\t<Typography variant='h5' >Payment Information</Typography>\n\t\t\t<br /><br />\n\t\t\t<form onSubmit={(e) => { e.preventDefault(); nextStep(); }} >\n\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t<FormLabel component=\"legend\">Payment Method</FormLabel>\n\t\t\t\t\t<RadioGroup row aria-label=\"method\" name=\"methods\" value={value} onChange={handleChange}>\n\t\t\t\t\t\t<FormControlLabel value={'0'} control={<Radio />} label=\"Debit Card\" />\n\t\t\t\t\t\t<FormControlLabel value={'1'} control={<Radio />} label=\"Credit Card\" />\n\t\t\t\t\t\t<FormControlLabel value={'2'} control={<Radio />} label=\"UPI\" />\n\t\t\t\t\t\t<FormControlLabel value={'3'} disabled control={<Radio />} label=\"COD\" />\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</FormControl>\n\t\t\t\t<br /><br />\n\t\t\t\t{paymentOptions[value]}\n\t\t\t\t<br /><br />\n\t\t\t\t<br /><br />\n\t\t\t\t<Button variant='contained' color='primary' onClick={prevStep} >Prev</Button>\n\t\t\t\t{' '}\n\t\t\t\t<Button type='submit' variant='contained' color='primary' >Finish</Button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport { Button, Typography } from '@material-ui/core'\n\nconst methods = [\n\t'Debit Card',\n\t'Credit Card',\n\t'UPI',\n]\n\nexport default function SuccessScreen({ details, prevStep }) {\n\treturn (\n\t\t<div style={{ flex: 1, display: 'flex', flexDirection: 'column', padding: 40, }} >\n\t\t\t<Typography variant='h5' >Your details have been saved</Typography>\n\t\t\t<br /><br />\n\t\t\t<Typography variant='h6' >Name:</Typography>\n\t\t\t<Typography variant='body1' color='textSecondary' >{details.name}</Typography>\n\t\t\t<br /><br />\n\t\t\t<Typography variant='h6' >Address:</Typography>\n\t\t\t<Typography variant='body1' color='textSecondary' >{details.address}</Typography>\n\t\t\t<br /><br />\n\t\t\t<Typography variant='h6' >Payment Method:</Typography>\n\t\t\t<Typography variant='body1' color='textSecondary' >{methods[details.paymentMethod]}</Typography>\n\t\t\t<br /><br />\n\t\t\t<Button variant='contained' color='primary' onClick={prevStep} >Change</Button>\n\t\t</div>\n\t)\n}\n","import React, { useState } from 'react';\nimport MainLayout from './components/MainLayout';\nimport PersonalDetails from './components/screens/PersonalDetails';\nimport PaymentDetails from './components/screens/PaymentDetails';\nimport SuccessScreen from './components/screens/SuccessScreen';\n\nfunction App() {\n\n\tconst [step, setStep] = useState(0)\n\n\tconst nextStep = () => {\n\t\tsetStep(step => step + 1)\n\t}\n\tconst prevStep = () => {\n\t\tsetStep(step => step - 1)\n\t}\n\n\tconst [details, setDetails] = useState({\n\t\tname: '',\n\t\taddress: '',\n\t\tpaymentMethod: '0'\n\t})\n\n\tconst updateDetails = (newDetails) => {\n\t\tlet tempDetails = details\n\t\tObject.keys(newDetails).forEach(key => {\n\t\t\ttempDetails[key] = newDetails[key]\n\t\t})\n\t\tsetDetails(tempDetails)\n\t\t// console.log(details)\n\t}\n\n\tconst screens = [\n\t\t<PersonalDetails nextStep={nextStep} details={details} updateDetails={updateDetails} />,\n\t\t<PaymentDetails nextStep={nextStep} prevStep={prevStep} details={details} updateDetails={updateDetails} />,\n\t\t<SuccessScreen prevStep={prevStep} details={details} />,\n\t]\n\n\treturn (\n\t\t<MainLayout activeStep={step} >\n\t\t\t{screens[step]}\n\t\t</MainLayout>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}